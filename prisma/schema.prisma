// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  role      String   @default("customer")
  createdAt DateTime @default(now())
  orders    Order[]
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  category    String
  breed       String
  age         String
  gender      String
  weight      Float
  price       Float
  location    String
  description String
  imageUrl    String
  videoUrl    String
  seller      Seller     @relation(fields: [sellerId], references: [id])
  sellerId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      OrderProduct[]
}

model Order {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  totalPrice  Float
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  products    OrderProduct[]
}

model OrderProduct {
  order       Order     @relation(fields: [orderId], references: [id])
  orderId     Int
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  @@id([orderId, productId])
  @@unique([orderId, productId])
}

model Seller {
  id           Int      @id @default(autoincrement())
  name         String
  username     String
  email        String   @unique
  phoneNumber  String
  isVerified   Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  products     Product[]
}